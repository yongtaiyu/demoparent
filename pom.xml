<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.internet</groupId>
	<artifactId>projectparent</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0</version>
	<name>projectparent</name>
	<url>http://maven.apache.org</url>

	<properties>
	   
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		 <osmp.version>1.0.0</osmp.version>
		<jetty.version>8.1.16.v20140903</jetty.version>
		<jersey.version>2.9</jersey.version>
		<spring.version>4.0.1.RELEASE</spring.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.1</version>
			<scope>provided</scope>
		</dependency>
		

	</dependencies>

	<modules>
		<module>ydk</module>
	    <module>yweb</module>
	</modules>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source> <!-- 源代码使用的开发版本 -->
					<target>1.8</target> <!-- 需要生成的目标class文件的编译版本 -->
					<!-- 一般而言，target与source是保持一致的，但是，有时候为了让程序能在其他版本的jdk中运行(对于低版本目标jdk，源代码中需要没有使用低版本jdk中不支持的语法)，会存在target不同于source的情况 -->
					<!-- 这下面的是可选项 <meminitial>128m</meminitial> <maxmem>512m</maxmem> -->
					<!-- <fork>true</fork> fork is enable,用于明确表示编译版本配置的可用 -->
					<!-- <compilerVersion>1.3</compilerVersion> -->

					<!-- 这个选项用来传递编译器自身不包含但是却支持的参数选项 <compilerArgument>-verbose -bootclasspath 
						${java.home}\lib\rt.jar</compilerArgument> -->
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>